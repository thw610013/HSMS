<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.student.mapper.NoticeMapper">

    <resultMap id="NoticeResult" type="com.example.student.entity.Notice">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="publishTime" column="publish_time"/>
        <result property="publisherId" column="publisher_id"/>
        <result property="publisherName" column="publisher_name"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="selectLatestNotices" resultMap="NoticeResult">
        SELECT 
            id, title, content, type, status, publish_time, publisher_id, publisher_name, create_time, update_time
        FROM 
            notice
        WHERE 
            status = 1
        ORDER BY 
            publish_time DESC
        LIMIT 
            #{limit}
    </select>

    <select id="selectNoticeList" parameterType="com.example.student.entity.Notice" resultMap="NoticeResult">
        SELECT 
            id, title, content, type, status, publish_time, publisher_id, publisher_name, create_time, update_time
        FROM 
            notice
        <where>
            <if test="title != null and title != ''">
                AND title like concat('%', #{title}, '%')
            </if>
            <if test="type != null">
                AND type = #{type}
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="publisherId != null">
                AND publisher_id = #{publisherId}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="selectPublishedNotices" resultMap="NoticeResult">
        SELECT 
            id, title, content, type, status, publish_time, publisher_id, publisher_name, create_time, update_time
        FROM 
            notice
        WHERE 
            status = 1
        ORDER BY 
            publish_time DESC
        LIMIT 10
    </select>

    <select id="selectNoticeById" parameterType="Long" resultMap="NoticeResult">
        SELECT 
            id, title, content, type, status, publish_time, publisher_id, publisher_name, create_time, update_time
        FROM 
            notice
        WHERE 
            id = #{id}
    </select>

    <insert id="insertNotice" parameterType="com.example.student.entity.Notice" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO notice (
            title, content, type, status, publish_time, publisher_id, publisher_name, create_time, update_time
        ) VALUES (
            #{title}, #{content}, #{type}, #{status}, #{publishTime}, #{publisherId}, #{publisherName}, #{createTime}, #{updateTime}
        )
    </insert>

    <update id="updateNotice" parameterType="com.example.student.entity.Notice">
        UPDATE notice
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="publishTime != null">publish_time = #{publishTime},</if>
            <if test="publisherId != null">publisher_id = #{publisherId},</if>
            <if test="publisherName != null">publisher_name = #{publisherName},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteNoticeById" parameterType="Long">
        DELETE FROM notice WHERE id = #{id}
    </delete>

    <delete id="deleteNoticeByIds" parameterType="Long">
        DELETE FROM notice WHERE id IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <update id="publishNotice" parameterType="Long">
        UPDATE notice
        SET status = 1, publish_time = NOW(), update_time = NOW()
        WHERE id = #{id}
    </update>

    <update id="offlineNotice" parameterType="Long">
        UPDATE notice
        SET status = 2, update_time = NOW()
        WHERE id = #{id}
    </update>
</mapper> 