<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.student.mapper.AttendanceMapper">
    
    <!-- 根据课程开设ID查询考勤记录 -->
    <select id="selectAttendanceByCourseOffering" resultType="com.example.student.entity.Attendance">
        SELECT 
            a.*
        FROM 
            attendance a
        WHERE 
            a.course_offering_id = #{courseOfferingId}
            <if test="attendanceDate != null">
                AND a.attendance_date = #{attendanceDate}
            </if>
        ORDER BY 
            a.attendance_date DESC
    </select>
    
    <!-- 查询学生的考勤统计 -->
    <select id="selectAttendanceStats" resultType="java.util.Map">
        SELECT 
            COUNT(CASE WHEN status = 0 THEN 1 END) AS normal_count,
            COUNT(CASE WHEN status = 1 THEN 1 END) AS absent_count,
            COUNT(CASE WHEN status = 2 THEN 1 END) AS late_count,
            COUNT(CASE WHEN status = 3 THEN 1 END) AS early_leave_count,
            COUNT(CASE WHEN status = 4 THEN 1 END) AS leave_count,
            COUNT(*) AS total_count
        FROM 
            attendance
        WHERE 
            student_id = #{studentId}
            <if test="courseOfferingId != null">
                AND course_offering_id = #{courseOfferingId}
            </if>
    </select>
    
    <!-- 根据课程ID列表批量查询课程信息 -->
    <select id="selectCoursesByIds" resultType="com.example.student.entity.Course" resultMap="courseResultMap">
        SELECT 
            id, name, code, credit, hours, type, department_id, description, 
            create_time, update_time
        FROM 
            course
        WHERE 
            id IN
            <foreach collection="courseIds" item="courseId" open="(" separator="," close=")">
                #{courseId}
            </foreach>
        
        UNION ALL
        
        <!-- 添加特殊课程ID 1000的处理 -->
        SELECT 
            1000 as id, 
            '临时课程' as name, 
            'TEMP001' as code, 
            3.0 as credit, 
            48 as hours, 
            0 as type, 
            1 as department_id, 
            '临时课程描述' as description,
            NOW() as create_time, 
            NOW() as update_time
        FROM 
            dual
        WHERE 
            1000 IN
            <foreach collection="courseIds" item="courseId" open="(" separator="," close=")">
                #{courseId}
            </foreach>
    </select>
    
    <!-- 课程结果映射 -->
    <resultMap id="courseResultMap" type="com.example.student.entity.Course">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="code" property="code" />
        <result column="credit" property="credit" />
        <result column="hours" property="hours" />
        <result column="type" property="type" />
        <result column="department_id" property="departmentId" />
        <result column="description" property="description" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <!-- 根据课程名称查询课程开设ID列表 -->
    <select id="selectCourseOfferingsByCourseName" resultType="java.lang.Long">
        SELECT 
            co.id
        FROM 
            course_offering co
        JOIN 
            course c ON co.course_id = c.id
        WHERE 
            c.name LIKE CONCAT('%', #{courseName}, '%')
    </select>
    
    <!-- 考勤统计结果映射 -->
    <resultMap id="attendanceStatisticsResultMap" type="com.example.student.vo.AttendanceStatisticsVO">
        <result column="type" property="type"/>
        <result column="course_id" property="courseId"/>
        <result column="course_name" property="courseName"/>
        <result column="course_code" property="courseCode"/>
        <result column="class_id" property="classId"/>
        <result column="class_name" property="className"/>
        <result column="class_code" property="classCode"/>
        <result column="date" property="date"/>
        <result column="status" property="status"/>
        <result column="status_name" property="statusName"/>
        <result column="normal_count" property="normalCount"/>
        <result column="absent_count" property="absentCount"/>
        <result column="late_count" property="lateCount"/>
        <result column="early_leave_count" property="earlyLeaveCount"/>
        <result column="leave_count" property="leaveCount"/>
        <result column="count" property="count"/>
        <result column="total_count" property="totalCount"/>
    </resultMap>
    
    <!-- 按课程统计考勤数据 -->
    <select id="getAttendanceStatisticsByCourse" resultMap="attendanceStatisticsResultMap">
        SELECT 
            'course' AS type,
            c.id AS course_id,
            c.name AS course_name,
            c.code AS course_code,
            COUNT(CASE WHEN a.status = 0 THEN 1 END) AS normal_count,
            COUNT(CASE WHEN a.status = 1 THEN 1 END) AS absent_count,
            COUNT(CASE WHEN a.status = 2 THEN 1 END) AS late_count,
            COUNT(CASE WHEN a.status = 3 THEN 1 END) AS early_leave_count,
            COUNT(CASE WHEN a.status = 4 THEN 1 END) AS leave_count,
            COUNT(*) AS total_count
        FROM 
            attendance a
        INNER JOIN 
            course_offering co ON a.course_offering_id = co.id
        INNER JOIN 
            course c ON co.course_id = c.id
        <where>
            <if test="classId != null">
                AND co.class_id = #{classId}
            </if>
            <if test="startDate != null">
                AND a.attendance_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND a.attendance_date &lt;= #{endDate}
            </if>
        </where>
        GROUP BY 
            c.id, c.name, c.code
        ORDER BY 
            c.name
    </select>
    
    <!-- 按班级统计考勤数据 -->
    <select id="getAttendanceStatisticsByClass" resultMap="attendanceStatisticsResultMap">
        SELECT 
            'class' AS type,
            cl.id AS class_id,
            cl.name AS class_name,
            cl.code AS class_code,
            COUNT(CASE WHEN a.status = 0 THEN 1 END) AS normal_count,
            COUNT(CASE WHEN a.status = 1 THEN 1 END) AS absent_count,
            COUNT(CASE WHEN a.status = 2 THEN 1 END) AS late_count,
            COUNT(CASE WHEN a.status = 3 THEN 1 END) AS early_leave_count,
            COUNT(CASE WHEN a.status = 4 THEN 1 END) AS leave_count,
            COUNT(*) AS total_count
        FROM 
            attendance a
        INNER JOIN 
            course_offering co ON a.course_offering_id = co.id
        INNER JOIN 
            course_selection cs ON cs.course_offering_id = co.id
        INNER JOIN 
            student s ON cs.student_id = s.id
        INNER JOIN 
            class cl ON s.class_id = cl.id
        <where>
            <if test="courseId != null">
                AND co.course_id = #{courseId}
            </if>
            <if test="startDate != null">
                AND a.attendance_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND a.attendance_date &lt;= #{endDate}
            </if>
        </where>
        GROUP BY 
            cl.id, cl.name, cl.code
        ORDER BY 
            cl.name
    </select>
    
    <!-- 按日期统计考勤数据 -->
    <select id="getAttendanceStatisticsByDate" resultMap="attendanceStatisticsResultMap">
        SELECT 
            'date' AS type,
            DATE_FORMAT(a.attendance_date, '%Y-%m-%d') AS date,
            COUNT(CASE WHEN a.status = 0 THEN 1 END) AS normal_count,
            COUNT(CASE WHEN a.status = 1 THEN 1 END) AS absent_count,
            COUNT(CASE WHEN a.status = 2 THEN 1 END) AS late_count,
            COUNT(CASE WHEN a.status = 3 THEN 1 END) AS early_leave_count,
            COUNT(CASE WHEN a.status = 4 THEN 1 END) AS leave_count,
            COUNT(*) AS total_count
        FROM 
            attendance a
        INNER JOIN 
            course_offering co ON a.course_offering_id = co.id
        <where>
            <if test="courseId != null">
                AND co.course_id = #{courseId}
            </if>
            <if test="classId != null">
                AND EXISTS (
                    SELECT 1 FROM course_selection cs 
                    JOIN student s ON cs.student_id = s.id 
                    WHERE cs.course_offering_id = co.id AND s.class_id = #{classId}
                )
            </if>
            <if test="startDate != null">
                AND a.attendance_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND a.attendance_date &lt;= #{endDate}
            </if>
        </where>
        GROUP BY 
            a.attendance_date
        ORDER BY 
            a.attendance_date DESC
    </select>
    
    <!-- 按状态统计考勤数据 -->
    <select id="getAttendanceStatisticsByStatus" resultMap="attendanceStatisticsResultMap">
        SELECT 
            'status' AS type,
            a.status AS status,
            CASE 
                WHEN a.status = 0 THEN '出勤'
                WHEN a.status = 1 THEN '缺勤'
                WHEN a.status = 2 THEN '迟到'
                WHEN a.status = 3 THEN '早退'
                WHEN a.status = 4 THEN '请假'
                ELSE '未知状态'
            END AS status_name,
            COUNT(*) AS count,
            (SELECT COUNT(*) FROM attendance WHERE 1=1
                <if test="courseId != null">
                    AND course_offering_id IN (SELECT id FROM course_offering WHERE course_id = #{courseId})
                </if>
                <if test="classId != null">
                    AND course_offering_id IN (
                        SELECT co.id FROM course_offering co
                        JOIN course_selection cs ON cs.course_offering_id = co.id
                        JOIN student s ON cs.student_id = s.id
                        WHERE s.class_id = #{classId}
                    )
                </if>
                <if test="startDate != null">
                    AND attendance_date &gt;= #{startDate}
                </if>
                <if test="endDate != null">
                    AND attendance_date &lt;= #{endDate}
                </if>
            ) AS total_count
        FROM 
            attendance a
        INNER JOIN 
            course_offering co ON a.course_offering_id = co.id
        <where>
            <if test="courseId != null">
                AND co.course_id = #{courseId}
            </if>
            <if test="classId != null">
                AND EXISTS (
                    SELECT 1 FROM course_selection cs 
                    JOIN student s ON cs.student_id = s.id 
                    WHERE cs.course_offering_id = co.id AND s.class_id = #{classId}
                )
            </if>
            <if test="startDate != null">
                AND a.attendance_date &gt;= #{startDate}
            </if>
            <if test="endDate != null">
                AND a.attendance_date &lt;= #{endDate}
            </if>
        </where>
        GROUP BY 
            a.status
        ORDER BY 
            a.status
    </select>
    
    <!-- 获取指定课程的考勤统计信息 -->
    <select id="getCourseAttendanceStatisticsById" resultMap="attendanceStatisticsResultMap">
        SELECT 
            'course' AS type,
            c.id AS course_id,
            c.name AS course_name,
            c.code AS course_code,
            COUNT(CASE WHEN a.status = 0 THEN 1 END) AS normal_count,
            COUNT(CASE WHEN a.status = 1 THEN 1 END) AS absent_count,
            COUNT(CASE WHEN a.status = 2 THEN 1 END) AS late_count,
            COUNT(CASE WHEN a.status = 3 THEN 1 END) AS early_leave_count,
            COUNT(CASE WHEN a.status = 4 THEN 1 END) AS leave_count,
            COUNT(*) AS total_count
        FROM 
            attendance a
        INNER JOIN 
            course_offering co ON a.course_offering_id = co.id
        INNER JOIN 
            course c ON co.course_id = c.id
        WHERE 
            c.id = #{courseId}
        GROUP BY 
            c.id, c.name, c.code
    </select>
    
    <!-- 获取指定班级的考勤统计信息 -->
    <select id="getClassAttendanceStatisticsById" resultMap="attendanceStatisticsResultMap">
        SELECT 
            'class' AS type,
            cl.id AS class_id,
            cl.name AS class_name,
            cl.code AS class_code,
            COUNT(CASE WHEN a.status = 0 THEN 1 END) AS normal_count,
            COUNT(CASE WHEN a.status = 1 THEN 1 END) AS absent_count,
            COUNT(CASE WHEN a.status = 2 THEN 1 END) AS late_count,
            COUNT(CASE WHEN a.status = 3 THEN 1 END) AS early_leave_count,
            COUNT(CASE WHEN a.status = 4 THEN 1 END) AS leave_count,
            COUNT(*) AS total_count
        FROM 
            attendance a
        INNER JOIN 
            course_offering co ON a.course_offering_id = co.id
        INNER JOIN 
            course_selection cs ON cs.course_offering_id = co.id
        INNER JOIN 
            student s ON cs.student_id = s.id
        INNER JOIN 
            class cl ON s.class_id = cl.id
        WHERE 
            cl.id = #{classId}
        GROUP BY 
            cl.id, cl.name, cl.code
    </select>
    
    <!-- 根据班级ID列表批量查询班级信息 -->
    <select id="getClassesByIds" resultMap="classResultMap">
        SELECT 
            id, name, code, grade, major_id, advisor_id, 
            create_time, update_time
        FROM 
            class
        WHERE 
            id IN
            <foreach collection="classIds" item="classId" open="(" separator="," close=")">
                #{classId}
            </foreach>
    </select>
    
    <!-- 班级结果映射 -->
    <resultMap id="classResultMap" type="com.example.student.entity.Class">
        <id column="id" property="id" />
        <result column="name" property="name" />
        <result column="code" property="code" />
        <result column="grade" property="grade" />
        <result column="major_id" property="majorId" />
        <result column="advisor_id" property="advisorId" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <!-- 获取本周考勤统计数据 -->
    <select id="getWeeklyAttendanceStats" resultType="java.util.Map">
        SELECT 
            COUNT(*) AS totalCount,
            COUNT(CASE WHEN status = 0 THEN 1 END) AS normalCount,
            COUNT(CASE WHEN status = 1 THEN 1 END) AS absentCount,
            COUNT(CASE WHEN status = 2 THEN 1 END) AS lateCount,
            COUNT(CASE WHEN status = 3 THEN 1 END) AS earlyLeaveCount,
            COUNT(CASE WHEN status = 4 THEN 1 END) AS leaveCount
        FROM 
            attendance
        WHERE 
            attendance_date BETWEEN #{startDate} AND #{endDate}
    </select>
</mapper> 